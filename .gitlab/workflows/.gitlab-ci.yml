# Code generated by kickr; DO NOT EDIT.

---
include:

  # semantic-release template
  # https://gitlab.com/to-be-continuous/semantic-release
  - project: to-be-continuous/semantic-release
    ref: e32f092873147606d5cb198bba45b470e4826649 # 4.0.1
    file: "templates/gitlab-ci-semrel.yml"

  # pre-commit template
  # https://gitlab.com/to-be-continuous/pre-commit
  - project: to-be-continuous/pre-commit
    ref: d56e5eb8bc1cf6f038a863678442c50104a3244e # 1.4.0
    file: "templates/gitlab-ci-pre-commit.yml"

  # Go template
  # https://gitlab.com/to-be-continuous/golang
  - project: to-be-continuous/golang
    ref: f7becc9b732e3c70e4c62ec7e4fedc13134898b6 # 4.15.0
    file: "templates/gitlab-ci-golang.yml"

variables:
  PRE_COMMIT_FILE: .pre-commit-config.yaml

  SEMREL_AUTO_RELEASE_ENABLED: false
  SEMREL_BRANCHES_REF: /^(master|main|v[0-9]+\.x|v[0-9]+\.[0-9]+\.x|next|alpha|beta|staging|dev|develop|development)$/
  SEMREL_HOOKS_DIR: scripts
  SEMREL_INFO_ON: all
  SEMREL_RELEASE_DISABLED: "false"
  SEMREL_REQUIRED_PLUGINS_FILE: .gitlab/semrel-plugins.txt
  SEMREL_TAG_FORMAT: v$${version}

  GO_CI_LINT_ARGS: --config=.golangci.yml --timeout=240s --allow-parallel-runners --output.checkstyle.path="reports/go-ci-lint.checkstyle.xml" --output.text.path=stdout
  GO_CI_LINT_IMAGE: docker.io/golangci/golangci-lint:latest-alpine
  GO_IMAGE: docker.io/library/golang:latest
  GO_OUTDATED_DISABLED: "false" # https://github.com/psampaz/go-mod-outdated
  GO_SBOM_DISABLED: "true"
  GO_TEST_FLAGS: -v -coverpkg=./... -covermode=count -timeout=30s
  GO_TEST_IMAGE: docker.io/library/golang:latest

default:
  interruptible: true

semantic-release-info:
  variables:
    GIT_DEPTH: "0"
  after_script:
    - source "$SEMREL_CONFIG_DIR/semrel.out.env" && rm "$SEMREL_CONFIG_DIR/semrel.out.env"
    - >
      echo "BRANCH_SHA=$(echo "$CI_COMMIT_REF_NAME" | sha256sum | cut -c -8)" >> "$SEMREL_CONFIG_DIR/semrel.out.env"

      if [ -n "$SEMREL_INFO_NEXT_VERSION" ]; then
        echo "SEMREL_INFO_LAST_VERSION=v${SEMREL_INFO_LAST_VERSION#v}" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION=v${SEMREL_INFO_NEXT_VERSION#v}" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=${SEMREL_INFO_NEXT_VERSION_TYPE}" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
      else
        DESCRIBE=$(git describe --tags || echo "v1.0.0")
        echo "SEMREL_INFO_NEXT_VERSION=v${DESCRIBE#v}" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=build" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
      fi
    - cat "$SEMREL_CONFIG_DIR/semrel.out.env"

semantic-release:
  interruptible: false
  variables:
    GIT_DEPTH: "0"

go-build:
  rules:
    - when: never # no binary to build
