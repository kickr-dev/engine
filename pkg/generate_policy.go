package engine

import (
	"errors"
	"io/fs"
	"os"
	"regexp"
)

// Policy defines the policy for generating a given file.
//
// By default, the policy is set to PolicyNone,
// meaning that a given file will be generated if it doesn't exist
// or if the notice "Code generated by [\w\-\/]+; DO NOT EDIT." is present.
type Policy int

const (
	// PolicyAlways always generates the file.
	PolicyAlways Policy = iota + 1

	// PolicyNone will use default behavior.
	PolicyNone
)

var generated = regexp.MustCompile(`Code generated by [\w\-\/]+; DO NOT EDIT.`)

// ShouldGenerate returns true if the file should be generated.
//
// A file is expected to be generated if:
//   - it contains the generated notice
//   - it does not exist
//   - it is empty
//   - the policy is set to PolicyAlways
func ShouldGenerate(out string, policy Policy) (bool, error) {
	if policy == PolicyAlways {
		return true, nil
	}

	content, err := os.ReadFile(out)
	if err != nil {
		if errors.Is(err, fs.ErrNotExist) {
			return true, nil
		}
		return false, err
	}
	return len(content) == 0 || generated.Match(content), nil
}
