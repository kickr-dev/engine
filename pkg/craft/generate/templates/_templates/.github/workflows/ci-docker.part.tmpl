jobs:
<<- define "docker" >>

<<- $golang := hasKey .Languages "go" >>
<<- $node := hasKey .Languages "node" >>

<<- $registry := .CI.Docker.Registry | default "ghcr.io" >>
<<- $path := .CI.Docker.Path | default .ProjectPath >>
<<- $ghcr := and (eq $registry "ghcr.io") (eq $path .ProjectPath) >>

  docker-hadolint:
    name: Docker Hadolint
    runs-on: ubuntu-latest
    needs: run-workflow
    permissions:
      pull-requests: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true # ensure sarif and tty formats are run for CodeQL and logs observability
        with:
          format: sarif
          output-file: hadolint-results.sarif
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: hadolint-results.sarif
          category: docker-hadolint

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs:
      - docker-hadolint
<<- if $golang >>
      - go-test
<<- end >>
<<- if $node >>
      - node-test
<<- end >>
      - version
    permissions:
      packages: << $ghcr | ternary "write" "none" >>
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - id: image
        run: |-
          image_name="<< $path >>"
          if [[ "${VERSION#v}" =~ ^[0-9]+(\.[0-9]+){2}$ ]]; then
            echo "stable=true" >> $GITHUB_OUTPUT
          else
            echo "stable=false" >> $GITHUB_OUTPUT
            image_name="$image_name/snapshot"
          fi

          image="<< $registry >>/$image_name"
          echo "Building docker image with full name '$image'"
          echo "image=$image" >> $GITHUB_OUTPUT

          echo "full_image=$image:$VERSION" >> $GITHUB_OUTPUT
        env:
          VERSION: ${{ needs.version.outputs.version }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image.outputs.image }}
          labels: |
            org.opencontainers.image.created={{date 'YYYY-MM-DDTHH:mm:ssZ'}}
            org.opencontainers.image.ref.name=${{ github.ref_name }}
            org.opencontainers.image.version=${{ needs.version.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            type=semver,enable=true,pattern={{raw}},value=${{ needs.version.outputs.version }}
            type=semver,enable=${{ steps.image.outputs.stable }},pattern=v{{major}}.{{minor}},value=${{ needs.version.outputs.version }}
            type=semver,enable=${{ steps.image.outputs.stable }},pattern=v{{major}},value=${{ needs.version.outputs.version }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: << $registry >>
          username: ${{ github.repository_owner }}
          password: << $ghcr | ternary "${{ secrets.GITHUB_TOKEN }}" "${{ secrets.REGISTRY_TOKEN }}" >>
      - uses: docker/build-push-action@v6
        with:
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            GIT_REF_NAME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.ref.name'] }}
            GIT_COMMIT=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
      - uses: aquasecurity/trivy-action@master
        with:
          exit-code: 0
          format: sarif
          ignore-unfixed: false
          image-ref: ${{ steps.image.outputs.full_image }}
          output: trivy-results.sarif
          severity: MEDIUM,HIGH,CRITICAL
        env:
          TRIVY_USERNAME: ${{ github.repository_owner }}
          TRIVY_PASSWORD: << $ghcr | ternary "${{ secrets.GITHUB_TOKEN }}" "${{ secrets.REGISTRY_TOKEN }}" >>
      - uses: github/codeql-action/upload-sarif@v3
        with:
          category: docker-trivy
          sarif_file: trivy-results.sarif
<<- end >>
