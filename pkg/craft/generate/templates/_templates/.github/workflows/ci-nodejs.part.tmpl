jobs:
<<- define "node" >>

<<- $specifics := get .Languages "node" >>
<<- $manager := cutAfter $specifics.PackageManager "@" >>

<<- /* bun doesn't support audit yet: https://github.com/oven-sh/bun/issues/5359 */ ->>
<<- if ne $manager "bun" >>

  node-audit:
    name: Node Audit
    runs-on: ubuntu-latest
    needs: run-workflow
    steps:
      - uses: actions/checkout@v4
<<- if eq $manager "pnpm" >>
      - uses: pnpm/action-setup@v4
<<- end >>
<<- if eq $manager "bun" >>
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
<<- end >>
      - uses: actions/setup-node@v4
        with:
          cache: << $manager >>
          node-version: lts/*
      - run: << $manager >> audit
<<- end >>

  node-lint:
    name: Node Lint
    runs-on: ubuntu-latest
    needs: run-workflow
    steps:
      - uses: actions/checkout@v4
<<- if eq $manager "pnpm" >>
      - uses: pnpm/action-setup@v4
<<- end >>
<<- if eq $manager "bun" >>
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
<<- else >>
      - uses: actions/setup-node@v4
        with:
          cache: << $manager >>
          node-version: lts/*
<<- end >>
      - run: mkdir -p reports/
<<- if eq $manager "npm" >>
      - run: << $manager >> ci
<<- else >>
      - run: << $manager >> install --frozen-lockfile
<<- end >>
      - run: << $manager >> run lint -o reports/node-lint.xslint.json -f json
<<- if has "sonar" .CI.Options >>
      - uses: actions/upload-artifact@v4
        with:
          name: lint
          path: reports
          retention-days: 1
<<- end >>

  node-test:
    name: Node Test
    runs-on: ${{ matrix.os }}
    needs: node-lint
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
<<- if eq $manager "pnpm" >>
      - uses: pnpm/action-setup@v4
<<- end >>
<<- if eq $manager "bun" >>
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
<<- else >>
      - uses: actions/setup-node@v4
        with:
          cache: << $manager >>
          node-version: lts/*
<<- end >>
      - run: mkdir -p reports/
<<- if eq $manager "npm" >>
      - run: << $manager >> ci
<<- end >>
<<- if eq $manager "bun" >>
      - run: |-
          << $manager >> install --frozen-lockfile
          << $manager >> test --rerun-each 10 --coverage --coverage-reporter=lcov --coverage-dir=reports --reporter=junit --reporter-outfile="reports/node-test.xunit.xml"
<<- else >>
      - run: |-
          << $manager >> install --frozen-lockfile
          << $manager >> run test -- --coverage --coverageDirectory=reports --reporters="jest-junit" --reporters="jest-sonar"
<<- end >>
<<- if has "codecov" .CI.Options >>
      - if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          codecov_yml_path: .codecov.yml
          disable_search: true
          env_vars: OS
          fail_ci_if_error: false
          files: reports/node-test.xunit.xml
          flags: ${{ matrix.os }}
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          OS: ${{ matrix.os }}
      - if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5
        with:
          codecov_yml_path: .codecov.yml
          disable_search: true
          env_vars: OS
          fail_ci_if_error: false
          files: reports/lcov.info
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          OS: ${{ matrix.os }}
<<- end >>
<<- if has "sonar" .CI.Options >>
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: reports
          retention-days: 1
<<- end >>

<<- if gt .Binaries 0 >>

  node-build:
    name: Node Build
    runs-on: ubuntu-latest
    needs:
      - node-test
      - version
    steps:
      - uses: actions/checkout@v4
<<- if eq $manager "pnpm" >>
      - uses: pnpm/action-setup@v4
<<- end >>
<<- if eq $manager "bun" >>
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
<<- else >>
      - uses: actions/setup-node@v4
        with:
          cache: << $manager >>
          node-version: lts/*
<<- end >>
<<- if eq $manager "npm" >>
      - run: << $manager >> ci
<<- else >>
      - run: << $manager >> install --frozen-lockfile
<<- end >>
      - run: << $manager >> run build
        env:
          VERSION: ${{ needs.version.outputs.version }}
<<- if .IsDeployment "pages" >>
      - uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: dist
          retention-days: 1
<<- end >>
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1
<<- end >>
<<- end >>
