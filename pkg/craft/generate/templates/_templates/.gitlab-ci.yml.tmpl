# Code generated by craft; DO NOT EDIT.

{{- $golang := hasKey .Languages "go" }}
{{- $hugo := hasKey .Languages "hugo" }}
{{- $node := hasKey .Languages "node" }}
{{- $shell := and (not (has "shell" .Exclude)) (gt (len (glob "*.*sh")) 0) }}

{{- $pages := and (.IsDeployment "pages") (or $node $hugo) }}
{{- $netlify := and (.IsDeployment "netlify") (or $node $hugo) }}

---
include: .gitlab/workflows/.gitlab-ci.yml

# secret variables
# (define the variables below in your GitLab group/project variables)

{{- if .CI.Release }}

# https://gitlab.com/to-be-continuous/semantic-release
# GITLAB_TOKEN: A GitLab 'project access token' or 'personal access token' with `api`, `read_repository` and `write_repository` scopes.
# SEMREL_GPG_SIGNKEY: Path to the GPG signkey exported with `gpg --armor --export-secret-key` (optional).
{{- end }}

{{- if .CI.Docker }}

# https://gitlab.com/to-be-continuous/docker
# In case a mirror is needed
# DOCKER_REGISTRY_MIRROR: The mirror registry URL
# DOCKER_REGISTRY_MIRROR_USER: The username with read access to registry mirror
# DOCKER_REGISTRY_MIRROR_PASSWORD: The user password / token with read access to registry mirror
{{- if .CI.Docker.Registry }}

# DOCKER_REGISTRY_SNAPSHOT_USER: The username with write access to {{ .CI.Docker.Registry }} (snapshot) to push docker images (default is $CI_REGISTRY_USER)
# DOCKER_REGISTRY_SNAPSHOT_PASSWORD: The user password / token with write access to {{ .CI.Docker.Registry }} (snapshot) to push docker images (default is $CI_REGISTRY_PASSWORD)
# DOCKER_REGISTRY_RELEASE_USER: The username with write access to {{ .CI.Docker.Registry }} to push docker images (default is $CI_REGISTRY_USER)
# DOCKER_REGISTRY_RELEASE_PASSWORD: The user password / token with write access to {{ .CI.Docker.Registry }} to push docker images (default is $CI_REGISTRY_PASSWORD)
{{- end }}
{{- end }}

{{- if and .CI.Helm (.IsDeployment "kubernetes") }}

# https://gitlab.com/to-be-continuous/helm
# For a flawless integration with GitLab environments, those variables may be defined in this file or in project / group variables.
# HELM_ENVIRONMENT_URL: "https://%{environment_name}.nonprod.acme.domain" # global url for all environments
# HELM_PROD_ENVIRONMENT_URL: "https://$HELM_BASE_APP_NAME.acme.domain" # override for prod (late expansion of $HELM_BASE_APP_NAME not needed here)
# HELM_REVIEW_ENVIRONMENT_URL: "https://wonderapp-review.nonprod.acme.domain/%{environment_name}" override for review (using separate resource paths)
{{- end }}

{{- if .CI.Helm }}

# https://gitlab.com/to-be-continuous/helm
# In case a private helm repository must be used, those variables may be defined in this file (except the password) or in project / group variables
# HELM_REPOS: "stable@https://charts.helm.sh/stable bitnami@https://charts.bitnami.com/bitnami other-proj@$CI_API_V4_URL/projects/1234/packages/helm/release"
# HELM_REPO_OTHER_PROJ_USER: "gitlab-token"
# HELM_REPO_OTHER_PROJ_PASSWORD: Helm password / token with read (and/or write) access to 'other-proj' repository (see above)

{{- if and .HasHelmPublish .CI.Helm.Registry }}

# HELM_PUBLISH_USER: Helm repository username (default is $CI_REGISTRY_USER)
# HELM_PUBLISH_PASSWORD: Helm repository password (default is $CI_REGISTRY_PASSWORD)
{{- end }}
{{- end }}

{{- if eq .Bot "renovate" }}

# https://gitlab.com/to-be-continuous/renovate
# Don't forget to setup a scheduled pipeline every once in a while to run Renovate updates checks.
# RENOVATE_TOKEN: A GitLab access token to allow Renovate crawl your projects. [See doc](https://docs.renovatebot.com/modules/platform/gitlab/#authentication)
# GITHUB_COM_TOKEN: A GitHub access token to allow Renovate fetch changelogs. [See doc](https://docs.renovatebot.com/getting-started/running/#githubcom-token-for-changelogs)
{{- end }}

{{- if eq .Bot "dependabot" }}

# Don't forget to setup a scheduled pipeline every once in a while to run Dependabot updates checks.
# SETTINGS__GITLAB_ACCESS_TOKEN: A GitLab access token to allow Dependabot creating merge requests. [See doc](https://dependabot-gitlab.gitlab.io/dependabot/config/environment.html#access)
# SETTINGS__GITHUB_ACCESS_TOKEN: A GitHub access token to allow Dependabot fetch changelogs. [See doc](https://dependabot-gitlab.gitlab.io/dependabot/config/environment.html#access)
{{- end }}

{{- if $netlify }}

# NETLIFY_SITE_ID: The netlify site ID where builds will be published (should be retrieved if the project name is the same here https://app.netlify.com/sites/{{ .ProjectName }}/configuration/general)
# NETLIFY_AUTH_TOKEN: The netlify authentication token (it's a personal token) to use for deployments (once connected, can be retrieved here https://app.netlify.com/user/applications#content)
{{- end }}

{{- if has "sonar" .CI.Options }}

# https://gitlab.com/to-be-continuous/sonar
# SONAR_HOST_URL: SonarQube URL
# SONAR_TOKEN: SonarQube authentication token (depends on your authentication method)
# SONAR_LOGIN: SonarQube login (depends on your authentication method)
# SONAR_PASSWORD: SonarQube password (depends on your authentication method)
{{- end }}

variables:
  PROD_REF: /^(master|main)$/
  INTEG_REF: /^(staging|dev|develop|development)$/
