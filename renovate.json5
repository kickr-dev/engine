// Code generated by craft; DO NOT EDIT.

// https://docs.renovatebot.com/configuration-options/

{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",

    "enabled": true,
    "extends": [
        ":automergeMinor",
        ":disableRateLimiting",
        ":enablePreCommit",
        ":enableVulnerabilityAlertsWithLabel(vulnerability)",
        ":gitSignOff",
        ":labels(dependencies, renovate)",
        ":separateMultipleMajorReleases"
    ],
    "branchPrefix": "renovate/",

    "branchConcurrentLimit": 0,
    "prCreation": "immediate",

    "ignorePaths": [
        "**/bower_components/**",
        "**/node_modules/**",
        "**/testdata/**"
    ],

    "dependencyDashboard": false,
    "osvVulnerabilityAlerts": false, // https://github.com/renovatebot/renovate/discussions/20542
    "forkProcessing": "disabled",

    "minimumReleaseAge": "5 days",
    "fetchChangeLogs": "pr",

    "semanticCommits": "auto",
    "semanticCommitType": "chore",
    "semanticCommitScope": "deps",

    "baseBranches": [
        "$default",
        "/^v[0-9]+\\.x$/",
        "/^v[0-9]+\\.[0-9]+\\.x$/"
    ],

    "assigneesFromCodeOwners": true,
    "bbUseDefaultReviewers": true,
    "gitLabIgnoreApprovals": true,
    "reviewersFromCodeOwners": true,

    "assignAutomerge": true,
    "automergeStrategy": "fast-forward",
    "automergeType": "pr",
    "platformAutomerge": true,

    "rebaseLabel": "rebase",
    "stopUpdatingLabel": "pause",

    "configMigration": false, // removes comments and sets indent to 2 and add a lot of newlines (https://github.com/renovatebot/renovate/issues/16359)

    "goGetDirs": [ "./..." ],
    "postUpdateOptions": [
        "gomodTidy",
        "gomodUpdateImportPaths",
        "helmUpdateSubChartArchives"
    ],
    "rangeStrategy": "bump",
    "updateLockFiles": true,
    "useBaseBranchConfig": "none",

    "gitlabci-include": {
        "versioning": "docker"
    },

    "gitlabci": {
        "versioning": "docker"
    },

    "packageRules": [
        {
            "matchCategories": [
                "cd",
                "ci",
                "helm",
                "kubernetes",
                "pre-commit",
                "terraform"
            ],
            "semanticCommitType": "ci"
        },
        {
            "matchFileNames": [
                "/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml\\.tmpl$/",
                "/(^|/)action\\.ya?ml\\.tmpl$/",

                "/\\.gitlab-ci\\.ya?ml\\.tmpl$/"
            ],
            "semanticCommitType": "ci"
        },
        {
            "addLabels": [ "non-major" ],
            "matchUpdateTypes": [ "!major" ]
        },
        {
            "addLabels": [ "major" ],
            "matchUpdateTypes": [ "major" ]
        }
    ],

    "postUpgradeTasks": {
        "commands": [ "./scripts/sh/renovate.sh" ],
        "executionMode": "branch"
    },

    "customManagers": [
        {
            "customType": "regex",
            "datasourceTemplate": "github-tags",
            "description": "Update versions without needing a comment for 'uses' in GitHub Actions template files",
            "managerFilePatterns": [
                "/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml\\.tmpl$/",
                "/(^|/)action\\.ya?ml\\.tmpl$/"
            ],
            "matchStrings": [
                // see https://regex101.com/r/SXViyG/2
                // uses: <packageName>@<the version>
                "uses:\\s*(?<packageName>[^@\\s'\"]+)@(?<currentValue>[\\w.+-]+)"
            ],
            "versioningTemplate": "docker"
        },
        {
            "customType": "regex",
            "datasourceTemplate": "gitlab-tags",
            "description": "Update versions without needing a comment for 'ref' in GitLab CI/CD template files",
            "managerFilePatterns": [
                "/\\.gitlab-ci\\.ya?ml\\.tmpl$/"
            ],
            "matchStrings": [
                // see https://regex101.com/r/9JD1ox/1
                // project: <packageName> ... <newline, tab, spaces, etc.> ref: <the version> (quotes may or may not be there)
                "project:\\s*(?<packageName>\\S+)\\s*ref:\\s*['\"]?(?<currentValue>[\\w.+-]+)['\"]?"
            ],
            "versioningTemplate": "docker"
        },
        {
            "customType": "regex",
            "description": "Update versions in any files with generic regex",
            "managerFilePatterns": [
                "/(^|/|\\.)([Dd]ocker|[Cc]ontainer)file$/",
                "/(^|/)([Dd]ocker|[Cc]ontainer)file[^/]*$/",

                "/^.*\\.[\\w]*sh.*?$/",
                "/^.*\\.json.*?$/",
                "/^.*\\.ya?ml.*?$/"
            ],
            "matchStrings": [
                // https://regex101.com/r/DMKexv/4
                // matches <packageName> <the version>
                "renovate:\\sdatasource=(?<datasource>\\S+)(?:\\sdepName=(?<depName>\\S+))?(?:\\sversioning=(?<versioning>\\S+))?\n(?:(?<key>\\S+)\\s)?(?<packageName>\\S+)\\s['\"]?(?<currentValue>[\\w.+-]+)['\"]?",
                "renovate:\\sdatasource=(?<datasource>\\S+)(?:\\spackageName=(?<packageName>\\S+))?(?:\\sdepName=(?<depName>\\S+))?(?:\\sversioning=(?<versioning>\\S+))?\n(?:(?<key>\\S+)\\s)?(?<name>\\S+)\\s['\"]?(?<currentValue>[\\w.+-]+)['\"]?",

                // https://regex101.com/r/BzJNUM/2
                // matches *_VERSION=<the version>
                "renovate:\\sdatasource=(?<datasource>\\S+)(?:\\sdepName=(?<depName>\\S+))?(?:\\sversioning=(?<versioning>\\S+))?\n(?:(?<key>\\S+)\\s)?(?<packageName>[^\\s_]+)_VERSION=['\"]?(?<currentValue>[\\w.+-]+)['\"]?",
                "renovate:\\sdatasource=(?<datasource>\\S+)(?:\\spackageName=(?<packageName>\\S+))?(?:\\sdepName=(?<depName>\\S+))?(?:\\sversioning=(?<versioning>\\S+))?\n(?:(?<key>\\S+)\\s)?(?<name>[^\\s_]+)_VERSION=['\"]?(?<currentValue>[\\w.+-]+)['\"]?",

                // see https://regex101.com/r/qXn2n5/9
                // matches <yaml key>: <the version> or <yaml key>=<the version> or <yaml key>: <packageName>@<the version>, things like that
                "renovate:\\sdatasource=(?<datasource>\\S+)(?:\\sdepName=(?<depName>\\S+))?(?:\\sversioning=(?<versioning>\\S+))?\n\\s*(?<key>\\S+)[:=]\\s{0,1}['\"]?(?:(?<packageName>\\S+)?@)?(?<currentValue>[\\w.+-]+)['\"]?",
                "renovate:\\sdatasource=(?<datasource>\\S+)(?:\\spackageName=(?<packageName>\\S+))?(?:\\sdepName=(?<depName>\\S+))?(?:\\sversioning=(?<versioning>\\S+))?\n\\s*(?<key>\\S+)[:=]\\s{0,1}['\"]?(?:(?<name>\\S+)?@)?(?<currentValue>[\\w.+-]+)['\"]?"
            ]
        }
    ]
}
