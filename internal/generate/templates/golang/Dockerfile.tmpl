# Code generated by craft; DO NOT EDIT.

<<- $binaries := dict >>
<<- $_ := map $binaries .Clis .Crons .Jobs .Workers >>

#############################
#        STAGE BUILD        #
#############################
FROM golang:latest AS build

WORKDIR /app

COPY . .

# hadolint ignore=DL3059
RUN go mod download

<<- if not .NoAPI >>
# hadolint ignore=DL3059
RUN CGO_ENABLED=0 go build -o << .ProjectName >>-api cmd/<< .ProjectName >>-api/main.go
<<- end >>

<<- range $name, $config := $binaries >>
# hadolint ignore=DL3059
RUN CGO_ENABLED=0 go build -o << $name >> cmd/<< $name >>/main.go
<<- end >>

#############################
#         STAGE RUN         #
#############################
FROM alpine:3

RUN addgroup -S nonroot && adduser -S nonroot -G nonroot

WORKDIR /app

COPY --from=build \
<<- if not .NoAPI >>
    /app/<< .ProjectName >>-api \
<<- end >>
<<- range $name, $config := $binaries >>
    /app/<< $name >> \
<<- end >>
    ./

<<- $entrypoint := "launcher.sh" >>

<<- /* directly use api binary if it is the only binary */>>
<<- if and (not .NoAPI) (eq (len $binaries) 0) >>
<<- $entrypoint = print .ProjectName "-api" >>
<<- end >>

<<- /* directly use the only binary */>>
<<- if and .NoAPI (eq (len $binaries) 1) >>
<<- range $name, $config := $binaries >>
<<- $entrypoint = $name >>
<<- end >>
<<- end >>

<<- /* copy launcher if the entrypoint is the launcher */>>
<<- if eq $entrypoint "launcher.sh" >>
COPY launcher.sh launcher.sh
<<- end >>

EXPOSE << .Port | default 3000 >>

USER nonroot

ENTRYPOINT [ "/app/<< $entrypoint >>" ]