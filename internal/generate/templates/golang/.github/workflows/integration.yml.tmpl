# Code generated by craft; DO NOT EDIT.

name: Integration
run-name: Integration

on:
  pull_request:
  push:
    branches:
      - main
      - staging
      - develop
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x
  workflow_dispatch:

jobs:

  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: false
          go-version-file: go.mod
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: golangci/golangci-lint-action@v4
        with:
<<- if not (has "sonar" .CI.Options) >>
          args: --config .golangci.yml --timeout 240s --fast --sort-results --out-format colored-line-number
<<- else >>
          args: --config .golangci.yml --timeout 240s --fast --sort-results --out-format checkstyle:sonar-report.xml,colored-line-number
      - uses: actions/upload-artifact@v4
        with:
          name: sonar-report
          path: sonar-report.xml
          retention-days: 1
<<- end >>

  go-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - on: macos-latest
            args: CGO_ENABLED="0"
          - on: ubuntu-latest
            args: CGO_ENABLED="0"
          - on: windows-latest
            args: env CGO_ENABLED="0"
    runs-on: ${{ matrix.os.on }}
    env:
      OS: ${{ matrix.os.on }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: ${{ matrix.os.args }} go test ./... -coverpkg="./..." -covermode="count" -coverprofile="coverage.out"
<<- if has "codecov" .CI.Options >>
      - uses: codecov/codecov-action@v4
        if: ${{ ! startsWith(github.ref_name, 'dependabot') }} # ignore codecov on dependabot branches
        with:
          codecov_yml_path: codecov.yml
          disable_search: true
          env_vars: OS
          fail_ci_if_error: true
          file: coverage.out
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}
<<- end >>
<<- if has "sonar" .CI.Options >>
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out
          retention-days: 1
<<- end >>

<<- $binaries := dict >>
<<- $_ := map $binaries .Clis .Crons .Jobs .Workers >>
<<- $docker := and .Docker (or .API (gt (len $binaries) 0)) >>
<<- if $docker >>

  docker-hadolint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true # enforce scan upload to codeql
        with:
          format: sarif
          output-file: hadolint-results.sarif
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: hadolint-results.sarif
          category: docker-hadolint
      - id: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          format: tty
<<- end >>

<<- if has "sonar" .CI.Options >>

  sonar-analysis:
    runs-on: ubuntu-latest
    needs:
      - version
    env:
      SONAR_USER_HOME: .sonar
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
      - uses: actions/cache/restore@v4
        with:
          path: $SONAR_USER_HOME
          key: sonar-cache
      - uses: sonarsource/sonarcloud-github-action@master
        if: github.event_name == 'pull_request'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dproject.settings=sonar.properties
            -Dsonar.projectVersion=${{ needs.version.outputs.version }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.pullrequest.branch=${{ github.ref_name }}
            -Dsonar.pullrequest.key=${{ github.base_ref }}
      - uses: sonarsource/sonarcloud-github-action@master
        if: github.event_name == 'push'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dproject.settings=sonar.properties
            -Dsonar.branch.name=${{ github.ref_name }}
            -Dsonar.projectVersion=${{ needs.version.outputs.version }}
      - uses: actions/cache/save@v4
        with:
          path: $SONAR_USER_HOME
          key: sonar-cache
<<- end >>