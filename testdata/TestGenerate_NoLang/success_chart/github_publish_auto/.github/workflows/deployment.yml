# Code generated by craft; DO NOT EDIT.

name: Deployment
run-name: Deployment

on:
  workflow_dispatch:
    inputs:
      helm_push:
        description: Helm publish run mode.
        type: choice
        options:
          - dry-run
          - none
          - full
        default: full

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - id: conclusion
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |-
            const { data } = await github.rest.actions.listWorkflowRuns({
              branch: process.env.GITHUB_REF_NAME,
              owner: context.repo.owner,
              page: 1,
              per_page: 1,
              repo: context.repo.repo,
              workflow_id: process.env.WORKFLOW_ID,
            })

            const latest = data.workflow_runs.at(0)
            if (!latest) {
              throw new Error(`No '${process.env.WORKFLOW_ID}' workflow runs found on ref name '${process.env.GITHUB_REF_NAME}'`)
            }
            console.log(latest)
            return latest.conclusion
        env:
          WORKFLOW_ID: integration.yml
      - if: ${{ steps.conclusion.outputs.result != 'success' }}
        run: |-
          echo "Latest '$WORKFLOW_RUN' workflow on '$GITHUB_REF_NAME' isn't in success conclusion: '$WORKFLOW_CONCLUSION'" && exit 1
        env:
          WORKFLOW_CONCLUSION: ${{ steps.conclusion.outputs.result }}

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: run-workflow
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - id: version
        run: |-
          DESCRIBE=$(git describe --tags || echo "v0.0.0")
          echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  helm-push:
    name: Helm Push
    runs-on: ubuntu-latest
    if: ${{ inputs.helm_push != 'none' }}
    needs:
      - version
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      # https://github.com/marketplace/actions/helm-tool-installer
      - uses: azure/setup-helm@v4
        with:
          # renovate: datasource=github-tags packageName=helm/helm versioning=semver
          version: v3.18.4
      - run: helm package --version "$VERSION" --app-version "$VERSION" --dependency-update "$HELM_CHART_DIR"
        env:
          HELM_CHART_DIR: chart/
          VERSION: ${{ needs.version.outputs.version }}
      - run: |-
          helm registry login "$HELM_REGISTRY" -u "$HELM_REPO_USERNAME" -p "$HELM_REPO_ACCESS_TOKEN"
          if [ "$HELM_DRY_RUN" = "false" ]; then
            helm push "$HELM_CHART_PATH" "$HELM_PUBLISH_URL"
          else
            echo "should push $HELM_CHART_PATH to $HELM_PUBLISH_URL"
          fi
        env:
          HELM_CHART_PATH: ${{ github.event.repository.name }}-${{ needs.version.outputs.version }}.tgz
          HELM_DRY_RUN: ${{ inputs.helm_push != 'full' }}
          HELM_PUBLISH_URL: oci://ghcr.io/kilianpaquier
          HELM_REGISTRY: ghcr.io
          HELM_REPO_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HELM_REPO_USERNAME: ${{ github.repository_owner }}
