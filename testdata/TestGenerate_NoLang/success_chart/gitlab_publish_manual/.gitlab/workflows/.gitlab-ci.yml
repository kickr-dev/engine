# Code generated by craft; DO NOT EDIT.

---
include:

  # semantic-release template
  - project: "to-be-continuous/semantic-release"
    ref: "3"
    file: "templates/gitlab-ci-semrel.yml"

  # pre-commit template
  - project: "to-be-continuous/pre-commit"
    ref: "1"
    file: "templates/gitlab-ci-pre-commit.yml"

  # Helm template
  - project: "to-be-continuous/helm"
    ref: "8"
    file: "templates/gitlab-ci-helm.yml"

variables:
  GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
  GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL

  SEMREL_AUTO_RELEASE_ENABLED: false
  SEMREL_BRANCHES_REF: /^(master|main|v[0-9]+\.x|v[0-9]+\.[0-9]+\.x|next|alpha|beta|staging|dev|develop|development)$/
  SEMREL_HOOKS_DIR: scripts
  SEMREL_INFO_ON: all
  SEMREL_RELEASE_DISABLED: "true"
  SEMREL_REQUIRED_PLUGINS_FILE: .gitlab/semrel-plugins.txt
  SEMREL_TAG_FORMAT: v$${version}

  PRE_COMMIT_FILE: .pre-commit-config.yaml

  HELM_CHART_DIR: chart/
  HELM_SCRIPTS_DIR: chart/hooks/
  HELM_SEMREL_RELEASE_DISABLED: "true" # version is handled manually
  HELM_TEST_ENABLED: "false"

  HELM_PACKAGE_ARGS: package --version "$SEMREL_INFO_NEXT_VERSION" --app-version "$SEMREL_INFO_NEXT_VERSION" --dependency-update
  HELM_PUBLISH_METHOD: push
  HELM_PUBLISH_ON: all
  HELM_PUBLISH_SNAPSHOT_ENABLED: "false"
  HELM_PUBLISH_STRATEGY: manual
  HELM_PUBLISH_URL: chartmuseum.example.com/path/to

semantic-release-info:
  variables:
    GIT_DEPTH: "0"
  after_script:
    - source "$SEMREL_CONFIG_DIR/semrel.out.env" && rm "$SEMREL_CONFIG_DIR/semrel.out.env"
    - >
      echo "BRANCH_SHA=$(echo "$CI_COMMIT_REF_NAME" | sha256sum | cut -c -8)" >> "$SEMREL_CONFIG_DIR/semrel.out.env"

      if [ -n "$SEMREL_INFO_NEXT_VERSION" ]; then
        echo "SEMREL_INFO_LAST_VERSION=v${SEMREL_INFO_LAST_VERSION#v}" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION=v${SEMREL_INFO_NEXT_VERSION#v}" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=${SEMREL_INFO_NEXT_VERSION_TYPE}" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
      else
        DESCRIBE=$(git describe --tags || echo "v1.0.0")
        echo "SEMREL_INFO_NEXT_VERSION=v${DESCRIBE#v}" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=build" >> "$SEMREL_CONFIG_DIR/semrel.out.env"
      fi
    - cat "$SEMREL_CONFIG_DIR/semrel.out.env"

semantic-release:
  variables:
    GIT_DEPTH: "0"
