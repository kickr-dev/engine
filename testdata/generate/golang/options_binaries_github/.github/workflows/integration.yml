# Code generated by craft; DO NOT EDIT.

name: Go Integration
run-name: Go Integration

on:
  - push
  - workflow_dispatch

jobs:

  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: v${{ steps.semantic_release.outputs.new_release_version }}
      release: ${{ steps.release.outputs.release }}
    steps:
      - uses: actions/checkout@v4
      - id: sha
        run: echo "sha=$(echo "${{ github.ref_name }}" | sha256sum | cut -c -8)" >> $GITHUB_OUTPUT
      - id: semantic_release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            semantic-release-license
          ci: false
          dry_run: true
          tag_format: v${version}
          branches: |
            [
              "(master|main)",
              "v+([0-9])?(.{+([0-9]),x}).x",
              { "name": "next", "prerelease": true },
              { "name": "beta", "prerelease": true },
              { "name": "alpha", "prerelease": true },
              { "name": "staging", "prerelease": "beta" },
              { "name": "develop", "prerelease": "alpha" },
              { "name": "${{ github.ref_name }}", "prerelease": "${{ steps.sha.outputs.sha }}" }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo v${{ steps.semantic_release.outputs.new_release_version }}
      - id: release
        run: |
          if [[ ${{ steps.semantic_release.outputs.new_release_version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "release=true" >> $GITHUB_OUTPUT
          fi

  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: false
          go-version-file: go.mod
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: golangci/golangci-lint-action@v4
        with:
          args: --config .golangci.yml --timeout 240s --fast --sort-results --out-format checkstyle:sonar-report.xml,colored-line-number
      - uses: actions/upload-artifact@v4
        with:
          name: sonar-report
          path: sonar-report.xml
          retention-days: 1

  go-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: CGO_ENABLED="0" go test ./... -coverpkg=./... -covermode=count -coverprofile=coverage.out
      - uses: codecov/codecov-action@v4
        if: ${{ ! startsWith(github.ref_name, 'dependabot') }} # ignore codecov on dependabot branches
        with:
          codecov_yml_path: codecov.yml
          disable_search: true
          fail_ci_if_error: true
          file: coverage.out
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out
          retention-days: 1

  sonar-analysis:
    runs-on: ubuntu-latest
    needs:
      - version
    env:
      SONAR_USER_HOME: .sonar
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
      - uses: actions/cache/restore@v4
        with:
          path: $SONAR_USER_HOME
          key: sonar-cache
      - uses: sonarsource/sonarcloud-github-action@master
        if: github.event_name == 'pull_request'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dproject.settings=sonar.properties
            -Dsonar.projectVersion=${{ needs.version.outputs.version }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.pullrequest.branch=${{ github.ref_name }}
            -Dsonar.pullrequest.key=${{ github.base_ref }}
      - uses: sonarsource/sonarcloud-github-action@master
        if: github.event_name == 'push'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dproject.settings=sonar.properties
            -Dsonar.branch.name=${{ github.ref_name }}
            -Dsonar.projectVersion=${{ needs.version.outputs.version }}
      - uses: actions/cache/save@v4
        with:
          path: $SONAR_USER_HOME
          key: sonar-cache