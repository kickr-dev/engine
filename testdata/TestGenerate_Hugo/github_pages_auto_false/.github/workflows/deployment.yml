# Code generated by craft; DO NOT EDIT.

name: Deployment
run-name: Deployment

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    permissions:
      actions: read
    env:
      WORKFLOW_RUN: integration
    steps:
      - id: conclusion
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |-
            const branch = process.env.GITHUB_REF_NAME
            const { data } = await github.rest.actions.listWorkflowRuns({
              branch: process.env.GITHUB_REF_NAME,
              owner: context.repo.owner,
              page: 1,
              per_page: 1,
              repo: context.repo.repo,
              workflow_id: process.env.WORKFLOW_NAME,
            })

            const latest = data.workflow_runs.at(0)
            if (!latest) {
              throw new Error(`No '${process.env.WORKFLOW_RUN}' workflow runs found on branch '${branch}'`)
            }
            return latest.conclusion
        env:
          WORKFLOW_NAME: ${{ env.WORKFLOW_RUN }}.yml
      - if: ${{ steps.conclusion.outputs.result != 'success' }}
        id: skip
        run: |-
          echo "Latest '$WORKFLOW_RUN' workflow on '$GITHUB_REF_NAME' isn't in success conclusion: '$WORKFLOW_CONCLUSION'" && exit 1
        env:
          WORKFLOW_CONCLUSION: ${{ steps.conclusion.outputs.result }}

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: run-workflow
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - id: version
        run: |-
          DESCRIBE=$(git describe --tags || echo "v0.0.0")
          echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  hugo-build:
    name: Hugo Build
    runs-on: ubuntu-latest
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true # fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # fetch all history for .GitInfo and .Lastmod
      - uses: actions/cache@v4
        with:
          path: /home/runner/.cache/hugo_cache
          key: hugo-${{ hashFiles('go.sum') }}
          restore-keys: |
            hugo-
      # https://github.com/marketplace/actions/hugo-setup
      - uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: latest
          extended: true
      - run: |-
          hugo --gc --enableGitInfo --minify --destination "${GITHUB_WORKSPACE}/dist" --logLevel debug
        env:
          VERSION: ${{ needs.version.outputs.version }}
      - uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: dist
          retention-days: 1

  pages:
    name: Pages
    runs-on: ubuntu-latest
    needs:
      - hugo-build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      id-token: write
      pages: write
      pull-requests: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          preview: ${{ github.ref_name != github.event.repository.default_branch }}
