# Code generated by craft; DO NOT EDIT.

name: Deployment
run-name: Deployment

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - id: integration_status
        uses: actions/github-script@v7
        with:
          script: |-
            const { data } = github.rest.actions.listWorkflowRuns({
              branch: process.env.GITHUB_REF_NAME,
              owner: context.repo.owner,
              page: 1,
              per_page: 1,
              repo: context.repo.repo,
              workflow_id: process.env.WORKFLOW_NAME,
            })
            return data[0].status
        env:
          WORKFLOW_NAME: "integration.yml"
      - if: ${{ steps.integration_status.outputs.result != 'success' }}
        run: echo "Previous integration workflow for $GITHUB_REF_NAME isn't in success state" && exit 1

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: run-workflow
    outputs:
      version: ${{ steps.version.outputs.version }}
    permissions:
      id-token: none
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semrel_version
        # renovate: datasource=git-refs packageName=https://github.com/cycjimmy/semantic-release-action depName=cycjimmy/semantic-release-action versioning=docker
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
          # renovate: datasource=github-tags packageName=semantic-release/semantic-release versioning=docker
          semantic_version: 24
          extra_plugins: |-
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: version
        run: |-
          if [ -n "$SEMREL_INFO_NEXT_VERSION" ]; then
            echo "version=v${SEMREL_INFO_NEXT_VERSION#v}" >> $GITHUB_OUTPUT
          else
            DESCRIBE=$(git describe --tags || echo "v0.0.0")
            echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
          fi
        env:
          SEMREL_INFO_NEXT_VERSION: ${{ steps.semrel_version.outputs.new_release_version }}
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.ref_protected }}
    environment:
      name: release
      url: ${{ steps.environment_url.outputs.environment_url }}
    permissions:
      id-token: none
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semrel_version
        # renovate: datasource=git-refs packageName=https://github.com/cycjimmy/semantic-release-action depName=cycjimmy/semantic-release-action versioning=docker
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: ${{ inputs.release == 'false' }}
          # renovate: datasource=github-tags packageName=semantic-release/semantic-release versioning=docker
          semantic_version: 24
          extra_plugins: |-
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: environment_url
        run: |-
          [ -z "$VERSION" ] || echo "environment_url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/tag/v${VERSION#v}" >> $GITHUB_OUTPUT
        env:
          VERSION: ${{ steps.semrel_version.outputs.new_release_version }}
