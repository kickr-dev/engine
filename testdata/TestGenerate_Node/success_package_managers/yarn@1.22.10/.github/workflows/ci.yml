# Code generated by craft; DO NOT EDIT.

name: CICD
run-name: CICD

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - alpha
      - beta
      - dev
      - develop
      - development
      - next
      - staging
      - main
      - master
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    # run on branches or pull request not being draft and associated with branches not protected
    if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && github.ref_protected != true) }}
    steps:
      - id: skip
        run: echo "Running workflow"

  pre-commit:
    name: Pre-Commit
    runs-on: ubuntu-latest
    needs: run-workflow
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - uses: pre-commit/action@v3.0.1

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: run-workflow
    if: ${{ github.event_name != 'pull_request' }}
    outputs:
      version: ${{ steps.version.outputs.version }}
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - id: version
        run: |-
          DESCRIBE=$(git describe --tags || echo "v0.0.0")
          echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  node-audit:
    name: Node Audit
    runs-on: ubuntu-latest
    needs: run-workflow
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: lts/*
      - run: yarn audit

  node-lint:
    name: Node Lint
    runs-on: ubuntu-latest
    needs: run-workflow
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: lts/*
      - run: mkdir -p reports/
      - run: yarn install --frozen-lockfile
      - run: yarn run lint -o reports/node-lint.xslint.json -f json

  node-test:
    name: Node Test
    runs-on: ${{ matrix.os }}
    needs: node-lint
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: lts/*
      - run: mkdir -p reports/
      - run: |-
          yarn install --frozen-lockfile
          yarn run test -- --coverage --coverageDirectory=reports --reporters="jest-junit" --reporters="jest-sonar"

  node-build:
    name: Node Build
    runs-on: ubuntu-latest
    needs:
      - node-test
      - version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: lts/*
      - run: yarn install --frozen-lockfile
      - run: yarn run build
        env:
          VERSION: ${{ needs.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1
