# Code generated by craft; DO NOT EDIT.

name: Deployment
run-name: Deployment

on:
  workflow_run:
    workflows:
      - Integration
    types:
      - completed
    branches:
      - alpha
      - beta
      - dev
      - develop
      - development
      - next
      - staging
      - main
      - master
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - if: ${{ github.event_name == 'workflow_dispatch' }}
        id: integration_status
        uses: actions/github-script@v7
        with:
          script: |-
            const { data } = github.rest.actions.listWorkflowRuns({
              branch: process.env.GITHUB_REF_NAME,
              owner: context.repo.owner,
              page: 1,
              per_page: 1,
              repo: context.repo.repo,
              workflow_id: process.env.WORKFLOW_NAME,
            })
            return data[0].status
        env:
          WORKFLOW_NAME: "integration.yml"
      - if: ${{ (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'success') || (github.event_name == 'workflow_dispatch' && steps.integration_status.outputs.result != 'success') }}
        run: echo "Previous integration workflow for $GITHUB_REF_NAME isn't in success state" && exit 1

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: run-workflow
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - id: version
        run: |-
          DESCRIBE=$(git describe --tags || echo "v0.0.0")
          echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  node-build:
    name: Node Build
    runs-on: ubuntu-latest
    needs: version
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
      - run: bun install --frozen-lockfile
      - run: bun run build
        env:
          VERSION: ${{ needs.version.outputs.version }}
      - uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: dist
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1

  pages:
    name: Pages
    runs-on: ubuntu-latest
    needs:
      - node-build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      id-token: write
      pages: write
      pull-requests: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          preview: ${{ github.ref_name != github.event.repository.default_branch }}
